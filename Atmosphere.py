
class ISAtmosphere:
        sealevel_density = 0.0023769

        density_ratio = [
            1.0000,     # sea level
            0.9771,
            0.9428,
            0.9151,
            0.8881,
            0.8617,
            0.8359,
            0.8106,
            0.7860,
            0.7620,
            0.7385,     # 10,000
            0.7156,
            0.6932,
            0.6713,
            0.6500,
            0.6292,
            0.6090,
            0.5892,
            0.5699,
            0.5511,
            0.5328,     # 20,000
            0.5150,
            0.4976,
            0.4807,
            0.4642,
            0.4481,
            0.4325,
            0.4173,
            0.4025,
            0.3881,
            0.3741,     # 30,000
            0.3605,
            0.3473,
            0.3345,
            0.3220,
            0.3099,
            0.2981,
            0.2844,
            0.2710,
            0.2583,
            0.2462,     # 40,000
            0.2346,
            0.2236,
            0.2131,
            0.2031,
            0.1936,
            0.1845,
            0.1758,
            0.1676,
            0.1597,
            0.1522      # 50,000
            ]

        sealevel_speed_of_sound = 1116.5

        speed_of_sound_ratio = [
            1.0000,     # sea level
            0.9966,
            0.9931,
            0.9896,
            0.9862,
            0.9827,
            0.9792,
            0.9756,
            0.9721,
            0.9686,
            0.9650,     # 10,000
            0.9614,
            0.9579,
            0.9543,
            0.9507,
            0.9470,
            0.9434,
            0.9397,
            0.9361,
            0.9324,
            0.9287,     # 20,000
            0.9250,
            0.9213,
            0.9175,
            0.9138,
            0.9100,
            0.9062,
            0.9024,
            0.8986,
            0.8948,
            0.8909,     # 30,000
            0.8871,
            0.8832,
            0.8793,
            0.8754,
            0.8714,
            0.8675,
            0.8671,
            0.8671,
            0.8671,
            0.8671,     # 40,000
            0.8671,
            0.8671,
            0.8671,
            0.8671,
            0.8671,
            0.8671,
            0.8671,
            0.8671,
            0.8671,
            0.8671      # 50,000
            ]

        sealevel_pressure = 2116.228

        pressure_ratio = [
            1.0000,     # sea level
            0.9644,
            0.9298,
            0.8962,
            0.8637,
            0.8320,
            0.8014,
            0.7716,
            0.7428,
            0.7148,
            0.6877,     # 10,000
            0.6614,
            0.6360,
            0.6113,
            0.5875,
            0.5643,
            0.5420,
            0.5203,
            0.4994,
            0.4791,
            0.4593,     # 20,000
            0.4406,
            0.4223,
            0.4046,
            0.3876,
            0.3711,
            0.3552,
            0.3398,
            0.3250,
            0.3107,
            0.2970,      # 30,000
            0.2837,
            0.2709,
            0.2586,
            0.2467,
            0.2353,
            0.2243,
            0.2138,
            0.2038,
            0.1942,
            0.1851,     # 40,000
            0.1764,
            0.1681,
            0.1602,
            0.1527,
            0.1455,
            0.1387,
            0.1322,
            0.1260,
            0.1201,
            0.1145      # 50,000
            ]

        def Density(altitude):
            return ISAtmosphere.sealevel_density * ISAtmosphere.density_ratio[int(altitude/1000)]

        def DensityRatio(altitude):
            return ISAtmosphere.density_ratio[int(altitude/1000)]

        def SpeedOfSound(altitude):
            return ISAtmosphere.sealevel_speed_of_sound * ISAtmosphere.speed_of_sound_ratio[int(altitude/1000)]

        def Pressure(altitude):
            return ISAtmosphere.sealevel_pressure * ISAtmosphere.pressure_ratio[int(altitude/1000)]

        def Mach(tas, altitude):
            return tas / ISAtmosphere.SpeedOfSound(altitude)

